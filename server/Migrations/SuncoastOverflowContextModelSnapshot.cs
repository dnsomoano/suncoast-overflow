// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using suncoast_overflow;

namespace suncoast_overflow.Migrations
{
    [DbContext(typeof(SuncoastOverflowContext))]
    partial class SuncoastOverflowContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("suncoast_overflow.Models.Answers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BodyOfAnswer");

                    b.Property<DateTime>("DateOfAnswer");

                    b.Property<int>("DownVoteAnswer");

                    b.Property<int>("QuestionsId");

                    b.Property<int>("UpVoteAnswer");

                    b.Property<string>("User");

                    b.HasKey("Id");

                    b.HasIndex("QuestionsId");

                    b.ToTable("Answers");

                    b.HasData(
                        new { Id = 3, BodyOfAnswer = "A perimeter actually ends..", DateOfAnswer = new DateTime(2018, 10, 22, 11, 53, 8, 789, DateTimeKind.Local), DownVoteAnswer = 1, QuestionsId = 1, UpVoteAnswer = 0, User = "jabberjaw" },
                        new { Id = 4, BodyOfAnswer = "A perimeter is declared within the function, while an argument is within the function call.", DateOfAnswer = new DateTime(2018, 10, 22, 11, 53, 8, 789, DateTimeKind.Local), DownVoteAnswer = 0, QuestionsId = 1, UpVoteAnswer = 3, User = "FTW" }
                    );
                });

            modelBuilder.Entity("suncoast_overflow.Models.Questions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BodyOfQuestion");

                    b.Property<DateTime>("DateOfQuestion");

                    b.Property<int>("DownVoteQuestion");

                    b.Property<string>("TitleOfQuestion");

                    b.Property<int>("UpVoteQuestion");

                    b.Property<string>("User");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new { Id = 1, BodyOfQuestion = "what is the difference between an argument and perimeter? Both seem to be the same", DateOfQuestion = new DateTime(2018, 10, 22, 11, 53, 8, 787, DateTimeKind.Local), DownVoteQuestion = 0, TitleOfQuestion = "difference between an argument and perimeter?", UpVoteQuestion = 1, User = "jackie-jaw" },
                        new { Id = 2, BodyOfQuestion = "what is the difference between a static method and an instance method? Both seem to be the same", DateOfQuestion = new DateTime(2018, 10, 22, 11, 53, 8, 788, DateTimeKind.Local), DownVoteQuestion = 0, TitleOfQuestion = "difference between a static method and an instance method?", UpVoteQuestion = 1, User = "jackie-job" }
                    );
                });

            modelBuilder.Entity("suncoast_overflow.Models.Answers", b =>
                {
                    b.HasOne("suncoast_overflow.Models.Questions", "Questions")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
